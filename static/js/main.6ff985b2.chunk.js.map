{"version":3,"sources":["Components/SearchForm/SearchForm.tsx","Components/Header/Header.tsx","Components/FavoriteButton/FavoriteButton.tsx","apiCalls.ts","Components/Result/Result.tsx","Components/ResultsPage/ResultsPage.tsx","Components/FavoritesDisplay/FavoritesDisplay.tsx","Components/FavoritesPage/FavoritesList.tsx","Components/RelatedItem/RelatedItem.tsx","Components/TitlePage/TitlePage.tsx","Components/EditorsChoice/EditorsChoice.tsx","Components/App/App.tsx","index.tsx"],"names":["SearchForm","props","useState","query","setQuery","search","trim","searchTerm","className","onSubmit","e","preventDefault","placeholder","onChange","target","value","onKeyDown","key","aria-label","onClick","Header","to","clearResults","FavoriteButton","favorite","imgSrc","setImgSrc","toggleFavorite","src","alt","wiki","Wiki","apiUrl","findSimilar","term","a","modifiedSearchTerm","split","join","url","fetch","data","findTitleInfo","then","response","json","catch","err","console","log","fetchFavorites","favorites","media","getWikiImage","wUrl","page","decodeURI","pop","mainImage","getEditorsChoice","r","d","choices","allMedia","Object","values","titles","push","splitMedia","reduce","acc","m","length","Promise","all","map","mediaArray","encodeURI","ok","error","datas","things","Similar","Info","Result","Name","Type","link","replace","imageUrl","setImageUrl","getImage","useEffect","ResultsPage","results","includes","type","searchItem","shift","FavoritesDisplay","resultsObj","resultJSX","movie","show","game","music","book","author","podcasts","FavoritesList","setResults","fetchData","RelatedItem","img","setImg","imgurl","TitlePage","info","setInfo","Results","imgUrl","retrieveInfo","allRelatedItems","item","yID","isFavorite","href","yUrl","rel","wTeaser","EditorsChoice","setTitles","getTitles","filter","t","getTitlesOfType","App","isLoading","setIsLoading","setError","setFavorites","lsFaves","localStorage","getItem","JSON","parse","setItem","stringify","id","f","status","path","render","name","match","params","exact","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.6ff985b2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./SearchForm.css\";\n\ninterface Props {\n  searchTerm: (term: string) => void;\n}\n\nconst SearchForm: React.FC<Props> = (props: Props) => {\n  const [query, setQuery] = useState(\"\");\n\n  const search = () => {\n    if (query.trim()) {\n      props.searchTerm(query.trim());\n      setQuery(query.trim());\n    }\n  };\n  return (\n    <section className=\"form-background\">\n      <section className=\"text-container\">\n        <h1 className=\"main-page-text\">Find Your Next Obession</h1>\n        <p className=\"main-page-p\">\n          Get recommendations for books, movies, games, artists, and tv shows by\n          searching for a specific title\n        </p>\n      </section>\n      <section className=\"form-container\">\n        <form className=\"SearchForm\" onSubmit={(e) => e.preventDefault()}>\n          <input\n            placeholder=\"ex: Frozen\"\n            onChange={(e) => setQuery(e.target.value)}\n            onKeyDown={(e) => e.key === \"Enter\" && search()}\n            value={query}\n            aria-label=\"Title Search\"\n          />\n          <button onClick={search}>Search</button>\n        </form>\n      </section>\n    </section>\n  );\n};\n\nexport default SearchForm;\n","import React, { ReactElement } from \"react\";\nimport \"./Header.css\";\nimport { Link } from \"react-router-dom\";\n\ninterface Props {\n  searchTerm: (term: string) => void;\n  clearResults: () => void;\n}\n\nconst Header: React.FC<Props> = (props: Props): ReactElement => {\n  return (\n    <header>\n      <Link to=\"/\" className=\"homepage-link\">\n        <section className=\"title-section\">\n          <button\n            className=\"now-what-button\"\n            onClick={() => props.clearResults()}\n          >\n            <h1 className=\"now-what-text\">Now What!?</h1>\n          </button>\n        </section>\n      </Link>\n      <section className=\"actions\">\n        <Link to=\"/favorites\" className=\"navlink\">\n          <p className=\"favorites\">FAVORITES</p>\n        </Link>\n      </section>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport \"./FavoriteButton.css\";\n\ninterface Props {\n  toggleFavorite: () => void;\n  favorite: boolean;\n}\n\nconst FavoriteButton = (props: Props) => {\n  const [imgSrc, setImgSrc] = useState(props.favorite ? \"-fill\" : \"\");\n  const toggleFavorite = () => {\n    props.toggleFavorite();\n    const newSrc = imgSrc ? \"\" : \"-fill\";\n    setImgSrc(newSrc);\n  };\n  return (\n    <button\n      onClick={toggleFavorite}\n      aria-label=\"favorite\"\n      className=\"FavoriteButton\"\n    >\n      <img src={`/images/favorite${imgSrc}.svg`} alt=\"favorite\" />\n    </button>\n  );\n};\n\nexport default FavoriteButton;\n","import Wiki from \"wikijs\";\nconst wiki = Wiki({ apiUrl: \"https://en.wikipedia.org/w/api.php\" });\n\nexport const findSimilar = async (term: string) => {\n  const corsAnywhere: string = `https://cors-anywhere.herokuapp.com/`;\n  const modifiedSearchTerm: string = term.split(\" \").join(\"+\");\n  const url = `${corsAnywhere}https://tastedive.com/api/similar?q=${modifiedSearchTerm}&verbose=1&k=372838-DavePern-7J59GJ8D`;\n  const data = await fetch(url);\n  return data;\n};\n\nexport const findTitleInfo = async (term: string) => {\n  const corsAnywhere: string = `https://cors-anywhere.herokuapp.com/`;\n  const url = `${corsAnywhere}https://tastedive.com/api/similar?q=${term}&verbose=1&k=372838-DavePern-7J59GJ8D&limit=3`;\n  // const data = await fetch(url);\n  return await fetch(url)\n    .then((response) => response.json())\n    .catch((err) => console.log(err));\n};\n\nexport const fetchFavorites = async (favorites: string[]) => {\n  const corsAnywhere: string = `https://cors-anywhere.herokuapp.com/`;\n  const media: string = favorites.join(\"%2C\");\n  const url = `${corsAnywhere}https://tastedive.com/api/similar?q=${media}&verbose=1&k=372838-DavePern-7J59GJ8D&limit=1`;\n\n  return await fetch(url).then((response) => response.json());\n};\n\nexport const getWikiImage = async (wUrl: string) => {\n  const page = decodeURI(wUrl.split(\"/\").pop() as string);\n  const url = await wiki.page(page).then((page) => page.mainImage());\n  return url;\n};\n\nexport const getEditorsChoice = async () => {\n  const choices = await fetch(\"/data/editors.json\")\n    .then((r) => r.json())\n    .catch(() =>\n      fetch(\n        \"https://raw.githubusercontent.com/rubyr/now-what/master/public/data/editors.json\"\n      ).then((d) => d.json())\n    );\n  let allMedia: string[] = [];\n  for (const titles of Object.values<string[]>(choices)) {\n    allMedia.push(...titles);\n  }\n  const splitMedia = allMedia.reduce(\n    (acc: string[][], m) => {\n      if (acc[acc.length - 1].push(m) > 10) {\n        acc.push([]);\n      }\n      return acc;\n    },\n    [[]]\n  );\n\n  const datas = await Promise.all(\n    splitMedia.map(async (mediaArray) => {\n      const media = encodeURI(mediaArray.join());\n\n      const corsAnywhere: string = `https://cors-anywhere.herokuapp.com/`;\n      const url = `${corsAnywhere}https://tastedive.com/api/similar?q=${media}&verbose=1&k=372838-DavePern-7J59GJ8D&limit=1`;\n\n      return fetch(url).then((r) => (r.ok ? r.json() : console.error(r)));\n    })\n  );\n\n  return datas.reduce((acc, things) => [...acc, ...things.Similar.Info], []);\n};\n","import React, { useState, useEffect } from \"react\";\nimport { searchResult } from \"../../types\";\nimport \"./Result.css\";\nimport { Link } from \"react-router-dom\";\nimport FavoriteButton from \"../FavoriteButton/FavoriteButton\";\nimport { getWikiImage } from \"../../apiCalls\";\n\ninterface Props {\n  data: searchResult;\n  toggleFavorite: (id: string) => void;\n  favorite: boolean;\n  type: string;\n}\n\nconst Result = (props: Props) => {\n  const { Name, wUrl, Type } = props.data;\n  const link = `/title/${Name.replace(/\\s/g, \"+\")}`;\n\n  const [imageUrl, setImageUrl] = useState(\"\");\n\n  const getImage = async (): Promise<void> => {\n    try {\n      const url = await getWikiImage(wUrl);\n      if (url) setImageUrl(url);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  useEffect(() => {\n    getImage();\n  });\n\n  return (\n    <article className=\"Result\">\n      <Link to={link}>\n        <img src={imageUrl} alt={Name} className=\"result-card-image\" />\n        <h3>{Name}</h3>\n      </Link>\n      <FavoriteButton\n        toggleFavorite={() => props.toggleFavorite(Type + \":\" + Name)}\n        favorite={props.favorite}\n      />\n    </article>\n  );\n};\n\nexport default Result;\n","import React from \"react\";\nimport { searchResult } from \"../../types\";\nimport Result from \"../Result/Result\";\nimport \"./ResultsPage.css\";\n\ninterface Props {\n  results: searchResult[];\n  toggleFavorite: (id: string) => void;\n  favorites: string[];\n}\n\nconst ResultsPage = (props: Props) => {\n  const results = props.results.map((r) => (\n    <Result\n      key={r.Name}\n      data={r}\n      toggleFavorite={props.toggleFavorite}\n      favorite={props.favorites.includes(`${r.Type}:${r.Name}`)}\n      type={r.Type}\n    />\n  ));\n  const searchItem = results.shift();\n\n  return (\n    <>\n      <h2>Search Results</h2>\n      <div className=\"ResultsPage\">\n        <section className=\"search-item-display\">\n          <h2>Main Title</h2>\n          {searchItem}\n        </section>\n        <section className=\"results-container\">\n          <h2>Related Titles</h2>\n          {results}\n        </section>\n      </div>\n    </>\n  );\n};\n\nexport default ResultsPage;\n","import React from \"react\";\nimport { searchResult } from \"../../types\";\nimport Result from \"../Result/Result\";\nimport \"./FavoritesDisplay.css\";\n\ninterface Props {\n  results: searchResult[];\n  toggleFavorite: (id: string) => void;\n  favorites: string[];\n}\n\ninterface ResultsObj {\n  [key: string]: JSX.Element[];\n}\n\nconst FavoritesDisplay = (props: Props) => {\n  const resultsObj = props.results.reduce((acc: ResultsObj, r) => {\n    const resultJSX = (\n      <Result\n        key={r.Name}\n        data={r}\n        toggleFavorite={props.toggleFavorite}\n        favorite={props.favorites.includes(`${r.Type}:${r.Name}`)}\n        type={r.Type}\n      />\n    );\n    if (!acc[r.Type]) {\n      acc[r.Type] = [];\n    }\n    acc[r.Type].push(resultJSX);\n\n    return acc;\n  }, {});\n\n  return (\n    <section>\n      <h2 className=\"favorites-header\">Favorites</h2>\n      <div className=\"favorites-display\">\n        <section className=\"favorites-section\">\n          {resultsObj.movie && <h3 className=\"favorite-type-header\">Movies</h3>}\n          {resultsObj.movie}\n        </section>\n        <section className=\"favorites-section\">\n          {resultsObj.show && (\n            <h3 className=\"favorite-type-header\">TV Shows</h3>\n          )}\n          {resultsObj.show}\n        </section>\n        <section className=\"favorites-section\">\n          {resultsObj.game && <h3 className=\"favorite-type-header\">Games</h3>}\n          {resultsObj.game}\n        </section>\n        <section className=\"favorites-section\">\n          {resultsObj.music && <h3 className=\"favorite-type-header\">Music</h3>}\n          {resultsObj.music}\n        </section>\n        <section className=\"favorites-section\">\n          {resultsObj.book && <h3 className=\"favorite-type-header\">Books</h3>}\n          {resultsObj.book}\n        </section>\n        <section className=\"favorites-section\">\n          {resultsObj.author && (\n            <h3 className=\"favorite-type-header\">Authors</h3>\n          )}\n          {resultsObj.author}\n        </section>\n        <section className=\"favorites-section\">\n          {resultsObj.podcasts && (\n            <h3 className=\"favorite-type-header\">Podcasts</h3>\n          )}\n          {resultsObj.podcasts}\n        </section>\n      </div>\n    </section>\n  );\n};\n\nexport default FavoritesDisplay;\n","import React, { useState, useEffect } from \"react\";\nimport FavoritesDisplay from \"../FavoritesDisplay/FavoritesDisplay\";\nimport { searchResult } from \"../../types\";\nimport { fetchFavorites } from \"../../apiCalls\";\n\ninterface Props {\n  favorites: string[];\n  toggleFavorite: (id: string) => void;\n}\n\nconst FavoritesList = (props: Props) => {\n  const [results, setResults] = useState<searchResult[]>([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const { Similar } = await fetchFavorites(props.favorites);\n\n      if (Similar) setResults(Similar.Info);\n    }\n    fetchData();\n  }, [props.favorites]);\n\n  return props.favorites.length ? (\n    <FavoritesDisplay\n      results={results}\n      toggleFavorite={props.toggleFavorite}\n      favorites={props.favorites}\n    />\n  ) : (\n    <p>Nothing favorited yet. Add some to see them here!</p>\n  );\n};\n\nexport default FavoritesList;\n","import React, { useEffect, useState } from \"react\";\nimport \"./RelatedItem.css\";\nimport { searchResult } from \"../../types\";\nimport { Link } from \"react-router-dom\";\nimport { getWikiImage } from \"../../apiCalls\";\n\ninterface Props {\n  Name: string;\n  Type: string;\n  wTeaser: string;\n  wUrl: string;\n  yUrl: string;\n  yID: string;\n}\n\nconst RelatedItem: React.FC<searchResult> = (props: Props) => {\n  const [img, setImg] = useState(\"\");\n  useEffect(() => {\n    async function getImage() {\n      try {\n        const imgurl = await getWikiImage(props.wUrl);\n\n        if (imgurl) setImg(imgurl);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    getImage();\n  }, [props.wUrl]);\n  return (\n    <Link to={`${props.Name.split(\" \").join(\"+\")}`}>\n      <section className=\"related-item\">\n        <img src={img} alt={props.Name} />\n        <h5 className=\"related-item-title\">{props.Name}</h5>\n      </section>\n    </Link>\n  );\n};\n\nexport default RelatedItem;\n","import React, { useState, useEffect } from \"react\";\nimport { searchResult } from \"../../types\";\nimport \"./TitlePage.css\";\nimport { findTitleInfo, getWikiImage } from \"../../apiCalls\";\nimport RelatedItem from \"../RelatedItem/RelatedItem\";\nimport FavoriteButton from \"../FavoriteButton/FavoriteButton\";\n\ninterface Props {\n  url: string;\n  toggleFavorite: (id: string) => void;\n  isFavorite: (id: string) => boolean;\n}\n\nconst TitlePage: React.FC<Props> = (props: Props) => {\n  const [results, setResults] = useState<searchResult[]>([]);\n  const [info, setInfo] = useState<searchResult[]>([]);\n  const [img, setImg] = useState(\"\");\n\n  useEffect(() => {\n    async function retrieveInfo() {\n      const data = await findTitleInfo(props.url);\n      if (data) {\n        setResults(data.Similar.Results);\n        setInfo(data.Similar.Info);\n\n        try {\n          const wUrl = (data.Similar.Info[0] as searchResult).wUrl;\n          const imgUrl = await getWikiImage(wUrl);\n\n          if (imgUrl) setImg(imgUrl);\n        } catch (e) {\n          setImg(\"\");\n        }\n\n        return data;\n      }\n    }\n    retrieveInfo();\n    return setResults([]);\n  }, [props.url]);\n\n  if (!results.length || !info.length) {\n    return (\n      <section>\n        <h5>Loading...</h5>\n      </section>\n    );\n  } else {\n    const allRelatedItems = results.map((item) => {\n      return <RelatedItem {...item} key={item.yID} />;\n    });\n    return (\n      <section className=\"title-page\">\n        <aside className=\"title-overview\">\n          <section className=\"title-header\">\n            <h1 className=\"title-title\">{info[0].Name}</h1>\n            <FavoriteButton\n              toggleFavorite={() =>\n                props.toggleFavorite(`${info[0].Type}:${info[0].Name}`)\n              }\n              favorite={props.isFavorite(`${info[0].Type}:${info[0].Name}`)}\n            />\n          </section>\n          {img.length && (\n            <img src={img} alt={info[0].Name} className=\"title-image\" />\n          )}\n          <figure className=\"title-image\"></figure>\n          <a href={info[0].yUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n            <img\n              className=\"youtube-link\"\n              src=\"/images/youtube_logo.png\"\n              alt=\"youtube-logo\"\n            ></img>\n          </a>\n        </aside>\n        <main className=\"title-detailed-info\">\n          <p>{info[0].wTeaser}</p>\n          <p className=\"wiki-link\">\n            <a href={info[0].wUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n              Read more...\n            </a>\n          </p>\n          <h3>Related Items</h3>\n          <section className=\"all-related-items\">\n            {results && allRelatedItems}\n          </section>\n        </main>\n      </section>\n    );\n  }\n};\n\nexport default TitlePage;\n","import React, { useState, useEffect } from \"react\";\nimport { getEditorsChoice } from \"../../apiCalls\";\nimport { searchResult } from \"../../types\";\nimport Result from \"../Result/Result\";\nimport \"./EditorsChoice.css\";\n\ninterface Props {\n  toggleFavorite: (id: string) => void;\n  isFavorite: (id: string) => boolean;\n}\n\nconst EditorsChoice = (props: Props) => {\n  const [titles, setTitles] = useState<searchResult[]>([]);\n\n  useEffect(() => {\n    async function getTitles() {\n      const data = await getEditorsChoice();\n      setTitles(data);\n    }\n    getTitles();\n  }, []);\n\n  const getTitlesOfType = (type: string) => {\n    return titles.filter((t) => t.Type === type);\n  };\n\n  const types = [\"movie\", \"show\", \"game\", \"music\"];\n\n  const results = types.map((type) => (\n    <div className=\"editor-pick-section\" key={type}>\n      <h3 className=\"editor-pick-section-header\">\n        Editor's Picks: {type !== 'music'? type + \"s\" : 'artists'}\n      </h3>\n      {getTitlesOfType(type).map((t) => (\n        <Result\n          data={t}\n          toggleFavorite={props.toggleFavorite}\n          favorite={props.isFavorite(`${t.Type}:${t.Name}`)}\n          type=\"\"\n          key={t.yID}\n        />\n      ))}\n    </div>\n  ));\n\n  return <div className=\"Editors-Choice\">{results}</div>;\n};\n\nexport default EditorsChoice;\n","import React, { ReactElement, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport SearchForm from \"../SearchForm/SearchForm\";\nimport Header from \"../Header/Header\";\nimport { searchResult } from \"../../types\";\nimport ResultsPage from \"../ResultsPage/ResultsPage\";\nimport { findSimilar } from \"../../apiCalls\";\nimport FavoritesList from \"../FavoritesPage/FavoritesList\";\nimport TitlePage from \"../TitlePage/TitlePage\";\nimport EditorsChoice from \"../EditorsChoice/EditorsChoice\";\n\nfunction App(): ReactElement {\n  const [results, setResults] = useState<searchResult[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<number | null>(null);\n  const [favorites, setFavorites] = useState<string[]>([]);\n\n  useEffect(() => {\n    const lsFaves = localStorage.getItem(\"favorites\");\n    if (lsFaves) {\n      setFavorites(JSON.parse(lsFaves));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n  }, [favorites]);\n\n  const toggleFavorite = (id: string): void => {\n    if (!favorites.includes(id)) setFavorites([...favorites, id]);\n    else setFavorites(favorites.filter((f) => f !== id));\n  };\n\n  const searchTerm = async (searchTerm: string) => {\n    setError(null);\n    setIsLoading(true);\n    findSimilar(searchTerm)\n      .then((response) =>\n        response.ok ? response.json() : setError(response.status)\n      )\n      .then((response) =>\n        response\n          ? setResults([...response.Similar.Info, ...response.Similar.Results])\n          : null\n      )\n      .catch((err) => setError(err));\n\n    setIsLoading(false);\n  };\n\n  const clearResults = () => {\n    setResults([]);\n  };\n\n  return (\n    <main className=\"App\">\n      <Header searchTerm={searchTerm} clearResults={clearResults} />\n      {error && (\n        <h3 className=\"error\">\n          We're sorry, but there seems to have been an issue. Please refresh the\n          page and try again. (Error code: {error})\n        </h3>\n      )}\n      <Switch>\n        <Route path=\"/favorites\">\n          <FavoritesList\n            favorites={favorites}\n            toggleFavorite={toggleFavorite}\n          />\n        </Route>\n        <Route path=\"/search/:query\"></Route>\n        <Route\n          path=\"/title/:name\"\n          render={({ match }) => {\n            const { name } = match.params;\n            return (\n              <TitlePage\n                url={name}\n                toggleFavorite={toggleFavorite}\n                isFavorite={(id: string) => favorites.includes(id)}\n              />\n            );\n          }}\n        ></Route>\n        <Route exact path=\"/\">\n          <SearchForm searchTerm={searchTerm} />\n          {isLoading && <p>Finding matches...</p>}\n          {results.length !== 0 ? (\n            <ResultsPage\n              results={results}\n              toggleFavorite={toggleFavorite}\n              favorites={favorites}\n            />\n          ) : (\n            <EditorsChoice\n              toggleFavorite={toggleFavorite}\n              isFavorite={(id: string) => favorites.includes(id)}\n            />\n          )}\n        </Route>\n      </Switch>\n    </main>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App/App\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/now-what\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}